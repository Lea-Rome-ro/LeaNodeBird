{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"D:\\\\1\\\\React_Node\\\\projectNodeBird\\\\front\\\\components\\\\CommentForm.js\",\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\nimport { Form, Input, Button } from 'antd';\nimport React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { ADD_COMMENT_REQUEST } from '../reducers/post';\nimport useInput from '../hooks/useInput';\nimport { addComment, addCommentDone } from '../reducers/post';\nvar CommentForm = function CommentForm(_ref) {\n  _s();\n  var post = _ref.post;\n  var id = useSelector(function (state) {\n    var _state$user$me;\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  var _useSelector = useSelector(function (state) {\n      return state.user;\n    }),\n    addCommentDone = _useSelector.addCommentDone;\n  var _useInput = useInput(''),\n    _useInput2 = _slicedToArray(_useInput, 3),\n    commentText = _useInput2[0],\n    onChangeCommentText = _useInput2[1],\n    setCommentText = _useInput2[2];\n  useEffect(function () {\n    if (addCommentDone) {\n      setText('');\n    }\n  }, [addCommentDone]);\n  var onSubmitComment = useCallback(function () {\n    console.log(post.id, commentText);\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: {\n        content: commentText,\n        postId: post.id,\n        userId: id\n      }\n    });\n  }, [commentText, id]);\n  return __jsx(Form, {\n    onFinish: onSubmitComment,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, __jsx(Form.Item, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, __jsx(Input.TextArea, {\n    value: commentText,\n    onChange: onChangeCommentText,\n    rows: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }), __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, \"\\uC090\\uC57D\")));\n};\n_s(CommentForm, \"QZHI4dAVbCL/SPmhgHNDtREk9Gk=\", false, function () {\n  return [useSelector, useSelector, useInput];\n});\n_c = CommentForm;\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default CommentForm;\nvar _c;\n$RefreshReg$(_c, \"CommentForm\");","map":{"version":3,"names":["Form","Input","Button","React","useCallback","PropTypes","useSelector","ADD_COMMENT_REQUEST","useInput","addComment","addCommentDone","CommentForm","post","id","state","user","me","commentText","onChangeCommentText","setCommentText","useEffect","setText","onSubmitComment","console","log","dispatch","type","data","content","postId","userId","propTypes","object","isRequired"],"sources":["D:/1/React_Node/projectNodeBird/front/components/CommentForm.js"],"sourcesContent":["import { Form, Input, Button } from 'antd';\r\nimport React, { useCallback } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector } from 'react-redux';\r\nimport { ADD_COMMENT_REQUEST } from '../reducers/post'\r\nimport useInput from '../hooks/useInput';\r\nimport { addComment, addCommentDone } from '../reducers/post';\r\n\r\nconst CommentForm = ({post}) => {\r\n    const id = useSelector((state) => state.user.me?.id);\r\n    const { addCommentDone } = useSelector((state) => state.user);\r\n    const [commentText, onChangeCommentText, setCommentText] = useInput('');\r\n\r\n    useEffect(() => {\r\n        if (addCommentDone) {\r\n            setText('');\r\n        }\r\n    },[addCommentDone])\r\n\r\n    const onSubmitComment=useCallback(()=> {\r\n        console.log(post.id, commentText);\r\n        dispatch({\r\n            type: ADD_COMMENT_REQUEST,\r\n            data: { content: commentText, postId: post.id, userId: id}\r\n        });\r\n    }, [commentText, id]);\r\n\r\n    return (\r\n        <Form onFinish={onSubmitComment}>\r\n            <Form.Item>\r\n                <Input.TextArea value={commentText} onChange={onChangeCommentText} rows={4} />\r\n                <Button type=\"primary\" htmlType=\"submit\">삐약</Button>\r\n            </Form.Item>\r\n        </Form>\r\n    );\r\n};\r\n\r\nCommentForm.propTypes = {\r\n    post: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default CommentForm;"],"mappings":";;;;;AAAA,SAASA,IAAI,EAAEC,KAAK,EAAEC,MAAM,QAAQ,MAAM;AAC1C,OAAOC,KAAK,IAAIC,WAAW,QAAQ,OAAO;AAC1C,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,mBAAmB,QAAQ,kBAAkB;AACtD,OAAOC,QAAQ,MAAM,mBAAmB;AACxC,SAASC,UAAU,EAAEC,cAAc,QAAQ,kBAAkB;AAE7D,IAAMC,WAAW,GAAG,SAAdA,WAAW,OAAe;EAAA;EAAA,IAAVC,IAAI,QAAJA,IAAI;EACtB,IAAMC,EAAE,GAAGP,WAAW,CAAC,UAACQ,KAAK;IAAA;IAAA,yBAAKA,KAAK,CAACC,IAAI,CAACC,EAAE,mDAAb,eAAeH,EAAE;EAAA,EAAC;EACpD,mBAA2BP,WAAW,CAAC,UAACQ,KAAK;MAAA,OAAKA,KAAK,CAACC,IAAI;IAAA,EAAC;IAArDL,cAAc,gBAAdA,cAAc;EACtB,gBAA2DF,QAAQ,CAAC,EAAE,CAAC;IAAA;IAAhES,WAAW;IAAEC,mBAAmB;IAAEC,cAAc;EAEvDC,SAAS,CAAC,YAAM;IACZ,IAAIV,cAAc,EAAE;MAChBW,OAAO,CAAC,EAAE,CAAC;IACf;EACJ,CAAC,EAAC,CAACX,cAAc,CAAC,CAAC;EAEnB,IAAMY,eAAe,GAAClB,WAAW,CAAC,YAAK;IACnCmB,OAAO,CAACC,GAAG,CAACZ,IAAI,CAACC,EAAE,EAAEI,WAAW,CAAC;IACjCQ,QAAQ,CAAC;MACLC,IAAI,EAAEnB,mBAAmB;MACzBoB,IAAI,EAAE;QAAEC,OAAO,EAAEX,WAAW;QAAEY,MAAM,EAAEjB,IAAI,CAACC,EAAE;QAAEiB,MAAM,EAAEjB;MAAE;IAC7D,CAAC,CAAC;EACN,CAAC,EAAE,CAACI,WAAW,EAAEJ,EAAE,CAAC,CAAC;EAErB,OACI,MAAC,IAAI;IAAC,QAAQ,EAAES,eAAgB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAC5B,MAAC,IAAI,CAAC,IAAI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACN,MAAC,KAAK,CAAC,QAAQ;IAAC,KAAK,EAAEL,WAAY;IAAC,QAAQ,EAAEC,mBAAoB;IAAC,IAAI,EAAE,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,EAC9E,MAAC,MAAM;IAAC,IAAI,EAAC,SAAS;IAAC,QAAQ,EAAC,QAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,kBAAY,CAC5C,CACT;AAEf,CAAC;AAAC,GA3BIP,WAAW;EAAA,QACFL,WAAW,EACKA,WAAW,EACqBE,QAAQ;AAAA;AAAA,KAHjEG,WAAW;AA6BjBA,WAAW,CAACoB,SAAS,GAAG;EACpBnB,IAAI,EAAEP,SAAS,CAAC2B,MAAM,CAACC;AAC3B,CAAC;AAED,eAAetB,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module"}