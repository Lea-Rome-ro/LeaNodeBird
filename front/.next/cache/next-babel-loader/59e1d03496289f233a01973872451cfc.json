{"ast":null,"code":"var _jsxFileName = \"D:\\\\1\\\\React_Node\\\\projectNodeBird\\\\front\\\\components\\\\CommentForm.js\";\nvar __jsx = React.createElement;\nimport { Form, Input, Button } from 'antd';\nimport React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { ADD_COMMENT_REQUEST } from '../reducers/post';\nimport useInput from '../hooks/useInput';\nimport { addComment, addCommentDone } from '../reducers/post';\nconst CommentForm = ({\n  post\n}) => {\n  const id = useSelector(state => {\n    var _state$user$me;\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  const {\n    addCommentDone\n  } = useSelector(state => state.user);\n  const [commentText, onChangeCommentText] = useInput('');\n  useEffect(() => {\n    if (addCommentDone) {\n      setText('');\n    }\n  }, [addCommentDone]);\n  const onSubmitComment = useCallback(() => {\n    console.log(post.id, commentText);\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: {\n        content: commentText,\n        postId: post.id,\n        userId: id\n      }\n    });\n  }, [commentText, id]);\n  return __jsx(Form, {\n    onFinish: onSubmitComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, __jsx(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, __jsx(Input.TextArea, {\n    value: commentText,\n    onChange: onChangeCommentText,\n    rows: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }), __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, \"\\uC090\\uC57D\")));\n};\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default CommentForm;","map":{"version":3,"names":["Form","Input","Button","React","useCallback","PropTypes","useSelector","ADD_COMMENT_REQUEST","useInput","addComment","addCommentDone","CommentForm","post","id","state","user","me","commentText","onChangeCommentText","useEffect","setText","onSubmitComment","console","log","dispatch","type","data","content","postId","userId","propTypes","object","isRequired"],"sources":["D:/1/React_Node/projectNodeBird/front/components/CommentForm.js"],"sourcesContent":["import { Form, Input, Button } from 'antd';\r\nimport React, { useCallback } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector } from 'react-redux';\r\nimport { ADD_COMMENT_REQUEST } from '../reducers/post'\r\nimport useInput from '../hooks/useInput';\r\nimport { addComment, addCommentDone } from '../reducers/post';\r\n\r\nconst CommentForm = ({post}) => {\r\n    const id = useSelector((state) => state.user.me?.id);\r\n    const { addCommentDone } = useSelector((state) => state.user);\r\n    const [commentText, onChangeCommentText] = useInput('');\r\n\r\n    useEffect(() => {\r\n        if (addCommentDone) {\r\n            setText('');\r\n        }\r\n    },[addCommentDone])\r\n\r\n    const onSubmitComment=useCallback(()=> {\r\n        console.log(post.id, commentText);\r\n        dispatch({\r\n            type: ADD_COMMENT_REQUEST,\r\n            data: { content: commentText, postId: post.id, userId: id}\r\n        });\r\n    }, [commentText, id]);\r\n\r\n    return (\r\n        <Form onFinish={onSubmitComment}>\r\n            <Form.Item>\r\n                <Input.TextArea value={commentText} onChange={onChangeCommentText} rows={4} />\r\n                <Button type=\"primary\" htmlType=\"submit\">삐약</Button>\r\n            </Form.Item>\r\n        </Form>\r\n    );\r\n};\r\n\r\nCommentForm.propTypes = {\r\n    post: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default CommentForm;"],"mappings":";;AAAA,SAASA,IAAI,EAAEC,KAAK,EAAEC,MAAM,QAAQ,MAAM;AAC1C,OAAOC,KAAK,IAAIC,WAAW,QAAQ,OAAO;AAC1C,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,mBAAmB,QAAQ,kBAAkB;AACtD,OAAOC,QAAQ,MAAM,mBAAmB;AACxC,SAASC,UAAU,EAAEC,cAAc,QAAQ,kBAAkB;AAE7D,MAAMC,WAAW,GAAG,CAAC;EAACC;AAAI,CAAC,KAAK;EAC5B,MAAMC,EAAE,GAAGP,WAAW,CAAEQ,KAAK;IAAA;IAAA,yBAAKA,KAAK,CAACC,IAAI,CAACC,EAAE,mDAAb,eAAeH,EAAE;EAAA,EAAC;EACpD,MAAM;IAAEH;EAAe,CAAC,GAAGJ,WAAW,CAAEQ,KAAK,IAAKA,KAAK,CAACC,IAAI,CAAC;EAC7D,MAAM,CAACE,WAAW,EAAEC,mBAAmB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEvDW,SAAS,CAAC,MAAM;IACZ,IAAIT,cAAc,EAAE;MAChBU,OAAO,CAAC,EAAE,CAAC;IACf;EACJ,CAAC,EAAC,CAACV,cAAc,CAAC,CAAC;EAEnB,MAAMW,eAAe,GAACjB,WAAW,CAAC,MAAK;IACnCkB,OAAO,CAACC,GAAG,CAACX,IAAI,CAACC,EAAE,EAAEI,WAAW,CAAC;IACjCO,QAAQ,CAAC;MACLC,IAAI,EAAElB,mBAAmB;MACzBmB,IAAI,EAAE;QAAEC,OAAO,EAAEV,WAAW;QAAEW,MAAM,EAAEhB,IAAI,CAACC,EAAE;QAAEgB,MAAM,EAAEhB;MAAE;IAC7D,CAAC,CAAC;EACN,CAAC,EAAE,CAACI,WAAW,EAAEJ,EAAE,CAAC,CAAC;EAErB,OACI,MAAC,IAAI;IAAC,QAAQ,EAAEQ,eAAgB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAC5B,MAAC,IAAI,CAAC,IAAI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACN,MAAC,KAAK,CAAC,QAAQ;IAAC,KAAK,EAAEJ,WAAY;IAAC,QAAQ,EAAEC,mBAAoB;IAAC,IAAI,EAAE,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,EAC9E,MAAC,MAAM;IAAC,IAAI,EAAC,SAAS;IAAC,QAAQ,EAAC,QAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,kBAAY,CAC5C,CACT;AAEf,CAAC;AAEDP,WAAW,CAACmB,SAAS,GAAG;EACpBlB,IAAI,EAAEP,SAAS,CAAC0B,MAAM,CAACC;AAC3B,CAAC;AAED,eAAerB,WAAW"},"metadata":{},"sourceType":"module"}