{"ast":null,"code":"import { createWrapper } from 'next-redux-wrapper';\nimport { applyMiddleware, createStore, compose } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport reducer from '../reducers';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from '../sagas';\nconst loggerMiddleware = ({\n  dispatch,\n  getState\n}) => next => action => {\n  console.log(action);\n  return next(action);\n};\nconst configureStore = () => {\n  const sagaMiddleware = createSagaMiddleware();\n  const middlewares = [sagaMiddleware, loggerMiddleware];\n  const enhancer = false ? compose(applyMiddleware(...middlewares)) : composeWithDevTools(applyMiddleware(...middlewares));\n  const store = createStore(reducer, enhancer);\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n};\nconst wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"names":["createWrapper","applyMiddleware","createStore","compose","composeWithDevTools","reducer","createSagaMiddleware","rootSaga","loggerMiddleware","dispatch","getState","next","action","console","log","configureStore","sagaMiddleware","middlewares","enhancer","store","sagaTask","run","wrapper","debug"],"sources":["D:/1/React_Node/projectNodeBird/front/store/configureStore.js"],"sourcesContent":["import {createWrapper} from 'next-redux-wrapper';\r\nimport { applyMiddleware, createStore, compose } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport reducer from '../reducers';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport rootSaga from '../sagas';\r\n\r\n\r\nconst loggerMiddleware = ({dispatch, getState }) => (next) => (action) => {\r\n    console.log(action);\r\n    return next(action);\r\n};\r\n\r\nconst configureStore = () => {\r\n    const sagaMiddleware = createSagaMiddleware();\r\n    const middlewares =  [sagaMiddleware, loggerMiddleware];\r\n    const enhancer = process.env.NODE_ENV === 'production'\r\n        ? compose(applyMiddleware(...middlewares))\r\n        : composeWithDevTools(applyMiddleware(...middlewares))\r\n    const store = createStore(reducer, enhancer);\r\n    store.sagaTask = sagaMiddleware.run(rootSaga);\r\n    return store;\r\n};\r\nconst wrapper = createWrapper(configureStore, {\r\n    debug: process.env.NODE_ENV === 'development',\r\n});\r\n\r\n\r\nexport default wrapper;"],"mappings":"AAAA,SAAQA,aAAa,QAAO,oBAAoB;AAChD,SAASC,eAAe,EAAEC,WAAW,EAAEC,OAAO,QAAQ,OAAO;AAC7D,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,OAAOC,OAAO,MAAM,aAAa;AACjC,OAAOC,oBAAoB,MAAM,YAAY;AAC7C,OAAOC,QAAQ,MAAM,UAAU;AAG/B,MAAMC,gBAAgB,GAAG,CAAC;EAACC,QAAQ;EAAEC;AAAS,CAAC,KAAMC,IAAI,IAAMC,MAAM,IAAK;EACtEC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;EACnB,OAAOD,IAAI,CAACC,MAAM,CAAC;AACvB,CAAC;AAED,MAAMG,cAAc,GAAG,MAAM;EACzB,MAAMC,cAAc,GAAGV,oBAAoB,EAAE;EAC7C,MAAMW,WAAW,GAAI,CAACD,cAAc,EAAER,gBAAgB,CAAC;EACvD,MAAMU,QAAQ,GAAG,QACXf,OAAO,CAACF,eAAe,CAAC,GAAGgB,WAAW,CAAC,CAAC,GACxCb,mBAAmB,CAACH,eAAe,CAAC,GAAGgB,WAAW,CAAC,CAAC;EAC1D,MAAME,KAAK,GAAGjB,WAAW,CAACG,OAAO,EAAEa,QAAQ,CAAC;EAC5CC,KAAK,CAACC,QAAQ,GAAGJ,cAAc,CAACK,GAAG,CAACd,QAAQ,CAAC;EAC7C,OAAOY,KAAK;AAChB,CAAC;AACD,MAAMG,OAAO,GAAGtB,aAAa,CAACe,cAAc,EAAE;EAC1CQ,KAAK;AACT,CAAC,CAAC;AAGF,eAAeD,OAAO"},"metadata":{},"sourceType":"module"}