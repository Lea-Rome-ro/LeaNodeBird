{"ast":null,"code":"function addPostAPI(data) {\n  return axios.post('/api/post', data);\n}\nfunction* addPost(action) {\n  try {\n    // const result = yield call(addPostAPI, action.data);\n    // call은 동기라서 결과를 기다리고 다음을 진행하지만, fork는 비동기로 결과를 기다리지 않고 바로 다음으로 넘어간다.\n    yield delay(1000);\n    yield put({\n      type: 'ADD_POST_SUCCESS'\n      //data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: 'ADD_POST_FAILURE',\n      data: err.response.data\n    });\n  }\n}\nfunction* watchAddPost() {\n  yield takeLatest('ADD_POST_REQUEST', addPost);\n  //yield throttle('ADD_POST_REQUEST', addPost, 10000);\n  // throttle은 ddos공격 방지용으로 사용하기는 하지만 주로 백엔드 쪽에서 요청에 대한 중복 점검을 한다.\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost)]);\n}","map":{"version":3,"names":["addPostAPI","data","axios","post","addPost","action","delay","put","type","err","response","watchAddPost","takeLatest","postSaga","all","fork"],"sources":["D:/1/React_Node/projectNodeBird/front/sagas/post.js"],"sourcesContent":["\r\n\r\nfunction addPostAPI(data) {\r\n    return axios.post('/api/post',data);\r\n}\r\n\r\nfunction* addPost(action) {\r\n    try {\r\n        // const result = yield call(addPostAPI, action.data);\r\n        // call은 동기라서 결과를 기다리고 다음을 진행하지만, fork는 비동기로 결과를 기다리지 않고 바로 다음으로 넘어간다.\r\n        yield delay(1000);\r\n        yield put({\r\n            type: 'ADD_POST_SUCCESS',\r\n            //data: result.data\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type: 'ADD_POST_FAILURE',\r\n            data: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction* watchAddPost() {\r\n    yield takeLatest('ADD_POST_REQUEST', addPost);\r\n    //yield throttle('ADD_POST_REQUEST', addPost, 10000);\r\n    // throttle은 ddos공격 방지용으로 사용하기는 하지만 주로 백엔드 쪽에서 요청에 대한 중복 점검을 한다.\r\n}\r\n\r\nexport default function* postSaga() {\r\n    yield all([\r\n        fork(watchAddPost),\r\n    ]);\r\n}"],"mappings":"AAEA,SAASA,UAAU,CAACC,IAAI,EAAE;EACtB,OAAOC,KAAK,CAACC,IAAI,CAAC,WAAW,EAACF,IAAI,CAAC;AACvC;AAEA,UAAUG,OAAO,CAACC,MAAM,EAAE;EACtB,IAAI;IACA;IACA;IACA,MAAMC,KAAK,CAAC,IAAI,CAAC;IACjB,MAAMC,GAAG,CAAC;MACNC,IAAI,EAAE;MACN;IACJ,CAAC,CAAC;EACN,CAAC,CAAC,OAAOC,GAAG,EAAE;IACV,MAAMF,GAAG,CAAC;MACNC,IAAI,EAAE,kBAAkB;MACxBP,IAAI,EAAEQ,GAAG,CAACC,QAAQ,CAACT;IACvB,CAAC,CAAC;EACN;AACJ;AAIA,UAAUU,YAAY,GAAG;EACrB,MAAMC,UAAU,CAAC,kBAAkB,EAAER,OAAO,CAAC;EAC7C;EACA;AACJ;;AAEA,eAAe,UAAUS,QAAQ,GAAG;EAChC,MAAMC,GAAG,CAAC,CACNC,IAAI,CAACJ,YAAY,CAAC,CACrB,CAAC;AACN"},"metadata":{},"sourceType":"module"}